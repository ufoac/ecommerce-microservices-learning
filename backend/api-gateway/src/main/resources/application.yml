server:
  port: 28080  # 网关端口（避免Windows端口限制）

spring:
  application:
    name: api-gateway  # 服务名称，用于服务注册发现
  main:
    web-application-type: reactive
  cloud:
    nacos:
      discovery:
        server-addr: ${ENV_NACOS_SERVER_ADDR:localhost:18848}
        namespace: ${APP_NACOS_NAMESPACE:public}
        group: ${APP_NACOS_GROUP:DEFAULT_GROUP}
        username: ${ENV_NACOS_USERNAME:nacos}
        password: ${ENV_NACOS_PASSWORD:nacos}
        enabled: true
        register-enabled: true

    gateway:
      routes:
        # 用户服务路由 - 服务发现模式
        - id: user-service
          uri: lb://user-service  # 负载均衡到用户服务
          predicates:
            - Path=/user/**  # 路径匹配规则
          filters:
            - StripPrefix=1  # 去除前缀，实际转发到/user-service的接口

        # 商品服务路由 - 服务发现模式
        - id: product-service
          uri: lb://product-service  # 负载均衡到商品服务
          predicates:
            - Path=/product/**
          filters:
            - StripPrefix=1

        # 交易服务路由 - 服务发现模式
        - id: trade-service
          uri: lb://trade-service  # 负载均衡到交易服务
          predicates:
            - Path=/trade/**
          filters:
            - StripPrefix=1

  # 跨域配置
  cors:
    allowed-origins: "*"
    allowed-methods: "*"
    allowed-headers: "*"
    allow-credentials: true

# 日志配置
logging:
  level:
    com.cao.ecommerce: DEBUG  # 开发环境打印DEBUG日志
    org.springframework.cloud.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway  # 开启健康检查、信息和网关端点
  endpoint:
    health:
      show-details: always