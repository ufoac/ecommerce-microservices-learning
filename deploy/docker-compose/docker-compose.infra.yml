# ==========================================
# 电商微服务基础设施服务
# Infrastructure Services for E-commerce Microservices
# ==========================================

services:
  # MySQL数据库
  mysql:
    image: ${MYSQL_IMAGE:-mysql}:${MYSQL_VERSION:-latest}
    container_name: mysql
    environment:
      - TZ=${TIMEZONE:-Asia/Shanghai}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root123456}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-ecommerce}
      - MYSQL_USER=${MYSQL_USER:-ecommerce}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-ecommerce123}
      - MYSQL_CHARACTER_SET_SERVER=${MYSQL_CHARSET:-utf8mb4}
      - MYSQL_COLLATION_SERVER=${MYSQL_COLLATION:-utf8mb4_unicode_ci}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - ecommerce-network
    volumes:
      - mysql-data:/var/lib/mysql
      - ./config/mysql/init:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=${MYSQL_CHARSET:-utf8mb4}
      --collation-server=${MYSQL_COLLATION:-utf8mb4_unicode_ci}
      --explicit_defaults_for_timestamp=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root123456}"]
      interval: ${HEALTHCHECK_INTERVAL:-30}s
      timeout: ${HEALTHCHECK_TIMEOUT:-10}s
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-60}s
    labels:
      - "com.ecommerce.service.type=infrastructure"
      - "com.ecommerce.service.category=database"

  # Redis缓存
  redis:
    image: ${REDIS_IMAGE:-redis}:${REDIS_VERSION:-latest}
    container_name: redis
    environment:
      - TZ=${TIMEZONE:-Asia/Shanghai}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123456}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - ecommerce-network
    volumes:
      - redis-data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /etc/localtime:/etc/localtime:ro
    command: >
      redis-server /usr/local/etc/redis/redis.conf
      --requirepass ${REDIS_PASSWORD:-redis123456}
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123456}", "ping"]
      interval: ${HEALTHCHECK_INTERVAL:-30}s
      timeout: ${HEALTHCHECK_TIMEOUT:-10}s
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-30}s
    labels:
      - "com.ecommerce.service.type=infrastructure"
      - "com.ecommerce.service.category=cache"

  # Nacos服务注册发现和配置中心
  nacos:
    image: ${NACOS_IMAGE:-nacos}:${NACOS_VERSION:-v2.5.1}
    container_name: nacos
    environment:
      - TZ=${TIMEZONE:-Asia/Shanghai}
      - MODE=${NACOS_MODE:-standalone}
      - NACOS_AUTH_ENABLE=${NACOS_AUTH_ENABLE:-true}
      - NACOS_AUTH_TOKEN=${NACOS_AUTH_TOKEN}
      - NACOS_AUTH_IDENTITY_KEY=${NACOS_AUTH_IDENTITY_KEY}
      - NACOS_AUTH_IDENTITY_VALUE=${NACOS_AUTH_IDENTITY_VALUE}
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_PORT=${MYSQL_PORT:-3306}
      - MYSQL_SERVICE_DB_NAME=${NACOS_DB_NAME:-nacos_config}
      - MYSQL_SERVICE_USER=${NACOS_DB_USER:-root}
      - MYSQL_SERVICE_PASSWORD=${NACOS_DB_PASSWORD:-root123456}
      - MYSQL_CHARACTER_SET_SERVER=${MYSQL_CHARSET:-utf8mb4}
      - MYSQL_COLLATION_SERVER=${MYSQL_COLLATION:-utf8mb4_unicode_ci}
    ports:
      - "${NACOS_SERVER_PORT:-18848}:8848"
      - "${NACOS_SERVER_RPC_PORT:-9848}:9848"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network
    volumes:
      - ./logs/nacos:/home/nacos/logs
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness"]
      interval: ${HEALTHCHECK_INTERVAL:-30}s
      timeout: ${HEALTHCHECK_TIMEOUT:-10}s
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-60}s
    labels:
      - "com.ecommerce.service.type=infrastructure"
      - "com.ecommerce.service.category=service-registry"

  # RocketMQ NameServer
  rocketmq-nameserver:
    image: ${ROCKETMQ_IMAGE:-apache/rocketmq}:${ROCKETMQ_VERSION:-5.3.2}
    container_name: rocketmq-nameserver
    environment:
      - TZ=${TIMEZONE:-Asia/Shanghai}
      - JAVA_OPT_EXT=-server -Xms256m -Xmx256m
    ports:
      - "${ROCKETMQ_NAMESRV_PORT:-9876}:9876"
    networks:
      - ecommerce-network
    volumes:
      - /etc/localtime:/etc/localtime:ro
    command: ["sh","-c","./mqnamesrv"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "timeout 5 bash -c 'echo > /dev/tcp/localhost/9876' || exit 1"]
      interval: ${HEALTHCHECK_INTERVAL:-30}s
      timeout: ${HEALTHCHECK_TIMEOUT:-10}s
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-30}s
    labels:
      - "com.ecommerce.service.type=infrastructure"
      - "com.ecommerce.service.category=message-queue"

  # RocketMQ Broker
  rocketmq-broker:
    image: ${ROCKETMQ_IMAGE:-apache/rocketmq}:${ROCKETMQ_VERSION:-5.3.2}
    container_name: rocketmq-broker
    environment:
      - TZ=${TIMEZONE:-Asia/Shanghai}
      - JAVA_OPT_EXT=-server -Xms256m -Xmx256m
      - NAMESRV_ADDR=rocketmq-nameserver:9876
    ports:
      - "${ROCKETMQ_BROKER_PORT1:-10909}:10909"
      - "${ROCKETMQ_BROKER_PORT2:-10911}:10911"
    depends_on:
      rocketmq-nameserver:
        condition: service_started
    networks:
      - ecommerce-network
    volumes:
      - /etc/localtime:/etc/localtime:ro
    command: ["sh","-c","./mqbroker -n rocketmq-nameserver:9876"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "timeout 5 bash -c 'echo > /dev/tcp/localhost/10911' || exit 1"]
      interval: ${HEALTHCHECK_INTERVAL:-30}s
      timeout: ${HEALTHCHECK_TIMEOUT:-10}s
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-30}s
    labels:
      - "com.ecommerce.service.type=infrastructure"
      - "com.ecommerce.service.category=message-queue"

  # RocketMQ Console
  rocketmq-console:
    image: ${ROCKETMQ_CONSOLE_IMAGE:-styletang/rocketmq-console-ng}:${ROCKETMQ_CONSOLE_VERSION:-latest}
    container_name: rocketmq-console
    environment:
      - TZ=${TIMEZONE:-Asia/Shanghai}
      - JAVA_OPTS=-Drocketmq.namesrv.addr=rocketmq-nameserver:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false
    ports:
      - "${ROCKETMQ_CONSOLE_PORT:-18080}:8080"
    depends_on:
      rocketmq-nameserver:
        condition: service_started
    networks:
      - ecommerce-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: ${HEALTHCHECK_INTERVAL:-30}s
      timeout: ${HEALTHCHECK_TIMEOUT:-10}s
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-60}s
    labels:
      - "com.ecommerce.service.type=infrastructure"
      - "com.ecommerce.service.category=message-queue"

  
networks:
  ecommerce-network:
    external: true
    name: ecommerce-network

volumes:
  mysql-data:
    driver: local
    name: ecommerce-mysql-data
  redis-data:
    driver: local
    name: ecommerce-redis-data
